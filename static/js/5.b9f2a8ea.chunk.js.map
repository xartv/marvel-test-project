{"version":3,"sources":["resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charListItem/charListItem.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/findChar/FindChar.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","services/MarvelService.js","hooks/http.hook.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js"],"names":["View","char","name","description","thumbnail","homepage","wiki","imgStyle","className","src","alt","style","href","RandomChar","useState","setChar","useMarvelService","loading","error","getCharacter","clearError","useEffect","updateChar","onCharLoaded","id","Math","floor","random","then","view","spinner","Spinner","errorMessage","ErrorMessage","onClick","mjolnir","CharListItem","props","onCharSelected","onSetRef","onFocus","ref","tabIndex","e","CharList","charList","setCharList","offset","setOffset","newListLoading","setNewListLoading","endList","setEndList","myRef","useRef","getAllCharacters","onRequest","initial","onCharListLoaded","newCharList","length","elements","map","i","charProps","el","current","forEach","item","classList","remove","target","add","disabled","display","Skeleton","Content","status","to","type","FindChar","findCharacter","useReducer","state","action","dispatch","onCharFinded","onSubmitForm","findedChar","formik","useFormik","initialValues","onSubmit","values","validationSchema","Yup","required","handleSubmit","placeholder","getFieldProps","errors","touched","comics","splice","CharInfo","charId","content","skeleton","ErrorBoundary","info","console","log","this","setState","children","Component","MainPage","charSelected","setCharSelected","Helmet","decoration","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","json","data","message","useHttp","_apiBase","_apiKey","_baseOffset","a","res","results","_transformCharacter","getAllComics","_transformComics","getComic","title","path","extension","price","prices","urls","pageCount","language","textObjects","descr","slice","items","width","margin","img"],"mappings":"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","file":"static/js/5.b9f2a8ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\tconst [char, setChar] = useState({}); // оставляем это состояние внутри компонента, оно почти больше нигде не используется, выносить в отдельный хук не нужно\n\n\tconst {loading, error, getCharacter, clearError} = useMarvelService(); // достаем уникальные для текущего компонента сущности из вызова нашего сервиса \n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t}\n\n\tconst updateChar = () => {\n\t\tclearError();\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n\t\tgetCharacter(id)\n\t\t\t.then(onCharLoaded);\n\t};\n\n\tconst view = !(error || loading) ? <View char={char}/> : null;\n\tconst spinner = loading ? <Spinner/> : null;\n\tconst errorMessage = error ? <ErrorMessage/> : null;\n\n\treturn (\n\t\t<div className=\"randomchar\">\n\t\t\t\t{view}\n\t\t\t\t{spinner}\n\t\t\t\t{errorMessage}\n\t\t\t\t<div className=\"randomchar__static\">\n\t\t\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\t\t\t\t\tRandom character for today!<br/>\n\t\t\t\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\t\t\t\t\tOr choose another one\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<button className=\"button button__main\" onClick={updateChar}>\n\t\t\t\t\t\t\t\t<div className=\"inner\">try it</div>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n\t\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst View = ({char}) => {\n\tconst {name, description, thumbnail, homepage, wiki} = char;\n\tconst imgStyle = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? {'objectFit': 'contain'} : null;\n\n\treturn (\n\t\t<div className=\"randomchar__block\">\n\t\t\t<img src={thumbnail} alt=\"Random character\" style={imgStyle} className=\"randomchar__img\"/>\n\t\t\t<div className=\"randomchar__info\">\n\t\t\t\t\t<p className=\"randomchar__name\">{name}</p>\n\t\t\t\t\t<p className=\"randomchar__descr\">\n\t\t\t\t\t\t\t{description}\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className=\"randomchar__btns\">\n\t\t\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default RandomChar;","\r\nconst CharListItem = (props) => {\r\n\tconst {thumbnail, imgStyle, name, onCharSelected, onSetRef, onFocus} = props;\r\n\r\n\treturn (\r\n\t\t<li \r\n\t\t\tref={onSetRef} \r\n\t\t\tclassName=\"char__item\" \r\n\t\t\tonClick={onCharSelected} \r\n\t\t\ttabIndex={0}\r\n\t\t\tonFocus={(e) => onFocus(e)}>\r\n\t\t\t<img src={thumbnail} style={imgStyle} alt={name}/>\r\n\t\t\t<div className=\"char__name\">{name}</div>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default CharListItem;","import useMarvelService from '../../services/MarvelService';\nimport CharListItem from '../charListItem/charListItem';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n\tconst [charList, setCharList] = useState([]);\n\tconst [offset, setOffset] = useState(100);\n\tconst [newListLoading, setNewListLoading] = useState(false);\n\tconst [endList, setEndList] = useState(false);\n\n\tconst myRef = useRef([]);\n\t\n\tconst {loading, error, getAllCharacters} = useMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewListLoading(false) : setNewListLoading(true); // если initial true, то это означает, что у нас первичная загрузка\n\t\tgetAllCharacters(offset)\n\t\t\t.then(onCharListLoaded)\n\t}\n\n\tconst onCharListLoaded = (newCharList) => {\n\t\tif (newCharList.length < 9) {\n\t\t\tsetEndList(true)\n\t\t}\n\n\t\tsetCharList(charList => [...charList, ...newCharList]);\n\t\tsetNewListLoading(false);\n\t\tsetOffset(offset => offset + 9);\n\t}\n\n\tconst onFocus = (e) => {\n\t\tmyRef.current.forEach(item => {\n\t\t\titem.classList.remove('char__item_selected');\n\t\t})\n\t\te.target.classList.add('char__item_selected');\n\t}\n\t\n\tconst {onCharSelected} = props;\n\tconst elements = charList.map((char, i) => {\n\t\tconst {id, thumbnail, ...charProps} = char;\n\t\tconst imgStyle = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? {'objectFit': 'contain'} : null;\n\n\t\treturn (\n\t\t\t<CharListItem \n\t\t\t\tkey={id} \n\t\t\t\tonSetRef={(el) => myRef.current[i] = el} \n\t\t\t\tonCharSelected={() => onCharSelected(id)} \n\t\t\t\timgStyle={imgStyle} \n\t\t\t\tthumbnail={thumbnail}\n\t\t\t\tonFocus={(e) => {\n\t\t\t\t\tonFocus(e);\n\t\t\t\t\tonCharSelected(id);\n\t\t\t\t}} \n\t\t\t\t{...charProps}/>\n\t\t)\n\t})\n\n\tconst spinner = loading && !newListLoading ? <Spinner/> : null;\n\tconst errorMessage = error ? <ErrorMessage/> : null;\n\n\treturn(\n\t\t<div className=\"char__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t<ul className=\"char__grid\">\n\t\t\t\t{elements}\n\t\t\t</ul>\n\t\t\t<button \n\t\t\t\tclassName=\"button button__main button__long\" \n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t\tdisabled={newListLoading}\n\t\t\t\tstyle={{display: endList ? 'none' : 'block'}}>\n\t\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\t\n}\n\nCharList.propTypes = {\n\tonCharSelected: PropTypes.func.isRequired,\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {useState, useReducer} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {useFormik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './findChar.scss'\r\n\r\nconst FindChar = () => {\r\n\tconst {findCharacter} = useMarvelService();\r\n\tconst [char, setChar] = useState(null);\r\n\tconst [status, dispatch] = useReducer(reducer, 'empty') \r\n\t\r\n\tfunction reducer(state, action) {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase 'finded': return {status: 'finded'};\r\n\t\t\tcase 'notFinded': return {status: 'notFinded'};\r\n\t\t\tdefault: return state;\r\n\t\t}\r\n\t}\r\n\r\n\tconst onCharFinded = (char) => {\r\n\t\tsetChar(char);\r\n\t\tdispatch({type: 'finded'});\r\n\t}\r\n\r\n\tconst onCharNotFinded = () => {\r\n\t\tsetChar(null);\r\n\t\tdispatch({type: 'notFinded'});\r\n\t}\r\n\r\n\tconst onSubmitForm = async(name) => {\r\n\t\tconst findedChar = await findCharacter(name);\r\n\t\tif (findedChar) {\r\n\t\t\tonCharFinded(findedChar);\r\n\t\t} else {\r\n\t\t\tonCharNotFinded();\r\n\t\t}\r\n\t}\r\n\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tname: '',\r\n\t\t},\r\n\t\tonSubmit: (values) => onSubmitForm(values.name),\r\n\t\tvalidationSchema: Yup.object({\r\n\t\t\tname: Yup.string()\r\n\t\t\t\t\t\t\t\t.required('Name is required')\r\n\t\t})\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className=\"findChar\" onSubmit={formik.handleSubmit}>\r\n\t\t\t<div className=\"findChar__header\">\r\n\t\t\t\tOr find a character by name:\r\n\t\t\t</div>\r\n\t\t\t<form className=\"findChar__form\">\r\n\t\t\t\t<input \r\n\t\t\t\t\tname=\"name\" \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder='Enter name'\r\n\t\t\t\t\t{...formik.getFieldProps('name')}/>\r\n\t\t\t\t<button className=\"button button__main\" type='submit'>\r\n\t\t\t\t\t<div className=\"inner\">Find</div>\r\n\t\t\t\t</button>\r\n\t\t\t\t{formik.errors.name && formik.touched.name ? <div className='error'>{formik.errors.name}</div> : null}\r\n\t\t\t</form>\r\n\t\t\t<Content char={char} status={status}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst Content = ({char, status}) => {\r\n\tswitch (status.status) {\r\n\t\tcase 'finded': \r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='findChar_finded'>{`There is! Visit ${char.name} page?`}</div>\r\n\t\t\t\t\t<Link to={`/characters/${char.id}`} className=\"button button__secondary\" type='submit'>\r\n\t\t\t\t\t\t<div className=\"inner\">To page</div>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\tcase 'notFinded': \r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className='findChar_notFinded'>{`Oh, sorry, there is no matches with this name in database`}</div>\r\n\t\t\t\t)\r\n\t\tdefault: \r\n\t\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport default FindChar;","import useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport Skeleton from '../skeleton/Skeleton';\nimport FindChar from \"../findChar/FindChar\";\n\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n\tconst [char, setChar] = useState(null);\n\n\tconst {loading, error, getCharacter, clearError} = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t\t// eslint-disable-next-line\n\t}, [props.charId]);\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t}\n\n\tconst updateChar = () => {\n\t\tif(!props.charId) {\n\t\t\treturn;\n\t\t}\n\n\t\tclearError();\n\t\tgetCharacter(props.charId)\n\t\t\t.then(onCharLoaded)\n\t};\n\n\tconst content = !(error || loading || !char) ? <Content char={char}/> : null;\n\tconst spinner = loading ? <Spinner/> : null;\n\tconst errorMessage = error ? <ErrorMessage/> : null;\n\tconst skeleton = !(error || loading || char) ? <Skeleton/> : null;\n\n\treturn (\n\t\t<div className='char__wrapper'>\n\t\t\t<div className=\"char__info\">\n\t\t\t\t{content}\n\t\t\t\t{spinner}\n\t\t\t\t{errorMessage}\n\t\t\t\t{skeleton}\n\t\t\t</div>\n\t\t\t<FindChar/>\n\t\t</div>\n\t)\n}\n\nconst Content = ({char}) => {\n\tconst {name, description, thumbnail, homepage, wiki} = char;\n\tlet {comics} = char;\n\n\tif (comics.length > 10) {\n\t\tcomics = comics.splice(0, 10);\n\t}\n\n\tlet elements = comics.map((item, id) => {\n\t\t\treturn (\n\t\t\t\t<li key={id} className=\"char__comics-item\">\n\t\t\t\t\t{item.name}\n\t\t\t\t</li>\n\t\t\t)\n\t})\n\n\telements = elements.length === 0 ? <div>There's no comics with this character</div> : elements; \n\n\tconst imgStyle = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? {'objectFit': 'contain'} : null;\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"char__basics\">\n\t\t\t\t\t\t\t<img style={imgStyle} src={thumbnail} alt={name}/>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\n\t\t\t\t\t\t\t\t\t<div className=\"char__btns\">\n\t\t\t\t\t\t\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"char__descr\">\n\t\t\t\t\t\t\t{description}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"char__comics\">Comics:</div>\n\t\t\t\t\t<ul className=\"char__comics-list\">\n\t\t\t\t\t\t\t{elements}\n\t\t\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nCharInfo.propTypes = {\n\tcharId: PropTypes.number,\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false,\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tconsole.log(`Ошибка - ${error}, Инфо - ${info}`);\r\n\t\tthis.setState({error: true});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage/>;\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\tconst [charSelected, setCharSelected] = useState(null);\r\n\r\n\tconst onCharSelected = (id) => {\r\n\t\tsetCharSelected(id);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tcontent=\"Marvel information portal\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t<title>Marvel information portal</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar/>\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className=\"char__content\">\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList onCharSelected={onCharSelected}/>\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharInfo charId={charSelected}/>\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t</div>\r\n\t\t\t<img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default MainPage;\r\n\r\n","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n\tconst {loading, request, error, clearError, setError} = useHttp(); // вытаскиваем сущности хука в отдельные переменные\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=21aa5af94424603715dc10109257132d'; \r\n\tconst _baseOffset = 100;\r\n\tconst _issueNumber = 1;\r\n\tconst _comicsLimit = 8;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter); // можно не писать item => this._transformCharacter(item), приходящий аргумент итак попадет в коллбэк\r\n\t}\r\n\t\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?limit=9&offset=210&${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t}\r\n\r\n\tconst findCharacter = async (name) => {\r\n\r\n\t\tlet res;\r\n\t\tlet data;\r\n\t\ttry {\r\n\t\t\tres = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\t\tif (res.data.results.length === 0) throw new Error(`There is no \"${name}\" in database`)\r\n\t\t\tdata = _transformCharacter(res.data.results[0]) \r\n\t\t} catch(e) {\r\n\t\t\tsetError(e.message)\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tconst getAllComics = async(offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}comics?issueNumber=${_issueNumber}&orderBy=focDate&limit=${_comicsLimit}&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async(id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\tname: comics.title,\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tprice: comics.prices[0].price,\r\n\t\t\turl: comics.urls[0].url,\r\n\t\t\tdescription: comics.description,\r\n\t\t\tpageCount: comics.pageCount,\r\n\t\t\tlanguage: comics.textObjects[0] ? comics.textObjects[0].language : null,\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\tlet descr = char.description;\r\n\t\tif (!descr) {\r\n\t\t\tdescr = \"Ooops..there's no info about this character\"\r\n\t\t} else if (descr.length > 210) {\r\n\t\t\tdescr = `${descr.slice(0, 207)}...`;\r\n\t\t}\r\n\t\t\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: descr,\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tid: char.id,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t}\t\t\r\n\t}\r\n\r\n\treturn {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic, findCharacter, setError} // возвращаем сущности (состояния загрузки и эррора, пройдя через сервис, передадутся после вызова сервиса в компонент)\r\n}\r\n\r\nexport default useMarvelService;","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type': 'application/json'}) => {\r\n\t\t\r\n\t\tsetLoading(true); // ставим загрузку в активный стэйт\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, body, headers}); // передаем в фетч аргументы из коллбэка для настройки запроса\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tsetLoading(false); // завершаем загрузку\r\n\t\t\treturn data;\r\n\r\n\t\t} catch(e) {\r\n\t\t\tsetLoading(false); // даже если ошибка, то завершаем загрузку\r\n\t\t\tsetError(e.message); // передаем в стэйт ошибки сообщение об ошибке\r\n\t\t\tthrow e; // пробрасываем ошибку дальше\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// нужна функция, для того, чтобы затереть стейт с ошибкой\r\n\tconst clearError = useCallback(() => setError(null), []);\r\n\r\n\treturn {loading, request, error, clearError, setError}; // возвращаем из хука сущности\r\n}","export default __webpack_public_path__ + \"static/media/error.2e68414c.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n\treturn(\r\n\t\t<img style={{width: 200, display: 'block', margin: '20px auto 0 auto'}} src={img} alt=\"error\" />\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage;"],"sourceRoot":""}