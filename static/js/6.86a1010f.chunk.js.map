{"version":3,"sources":["components/pages/SinglePage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["ComicContent","data","name","description","thumbnail","price","pageCount","language","className","content","src","alt","to","CharContent","SinglePage","props","id","useParams","useState","single","setSingle","useMarvelService","getComic","getCharacter","process","setProcess","useEffect","onRequest","onComicLoaded","comic","onCharLoaded","char","then","setContent","ErrorMessage","style","width","display","margin","img","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","a","offset","res","results","map","_transformCharacter","findCharacter","length","getAllComics","_transformComics","comics","title","path","extension","prices","urls","textObjects","descr","slice","homepage","wiki","items","Skeleton","Component","Spinner","AppBanner","avengers","avengersLogo"],"mappings":"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","file":"static/js/6.86a1010f.chunk.js","sourcesContent":["import { Link, useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\n\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\nimport './singlePage.scss';\r\n\r\nconst SinglePage = (props) => {\r\n\tconst { id } = useParams();\r\n\tconst [single, setSingle] = useState('');\r\n\tconst { getComic, getCharacter, process, setProcess } = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tonRequest(id);\r\n\t\t// eslint-disable-next-line\r\n\t}, [id])\r\n\r\n\tconst onComicLoaded = (comic) => {\r\n\t\tsetSingle(comic);\r\n\t}\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetSingle(char);\r\n\t}\r\n\r\n\tconst onRequest = (id) => {\r\n\t\tif (props.comic) {\r\n\t\t\tgetComic(id)\r\n\t\t\t\t.then(onComicLoaded)\r\n\t\t\t\t.then(() => setProcess('confirmed'));\r\n\t\t}\r\n\t\tif (props.char) {\r\n\t\t\tgetCharacter(id)\r\n\t\t\t\t.then(onCharLoaded)\r\n\t\t\t\t.then(() => setProcess('confirmed'));\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AppBanner/>\r\n\t\t\t{props.comic ? setContent(process, ComicContent, single) : props.char ? setContent(process, CharContent, single) : null}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst ComicContent = ({data}) => {\r\n\tconst {name, description, thumbnail, price, pageCount, language} = data;\r\n\treturn (\r\n\t\t<div className=\"single\">\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tcontent={`${name} comics book`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<title>{name}</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<img src={thumbnail} alt={name} className=\"single__img\"/>\r\n\t\t\t<div className=\"single__info\">\r\n\t\t\t\t<h2 className=\"single__name\">{name}</h2>\r\n\t\t\t\t<p className=\"single__descr\">{description}</p>\r\n\t\t\t\t<p className=\"single__descr\">{pageCount} pages</p>\r\n\t\t\t\t<p className=\"single__descr\">language: {language}</p>\r\n\t\t\t\t<div className=\"single__price\">{price} $</div>\r\n\t\t\t</div>\r\n\t\t\t<Link to=\"../comics\" className=\"single__back\">Back to all</Link>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst CharContent = ({data}) => {\r\n\tconst {name, description, thumbnail} = data;\r\n\treturn (\r\n\t\t<div className=\"single\">\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tcontent={`${name} single page`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<title>{name}</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<img src={thumbnail} alt={name} className=\"single__img\"/>\r\n\t\t\t<div className=\"single__info\">\r\n\t\t\t\t<h2 className=\"single__name\">{name}</h2>\r\n\t\t\t\t<p className=\"single__descr\">{description}</p>\r\n\t\t\t</div>\r\n\t\t\t<Link to=\"/\" className=\"single__back\">Back main page</Link>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SinglePage;","export default __webpack_public_path__ + \"static/media/error.2e68414c.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n\treturn(\r\n\t\t<img style={{width: 200, display: 'block', margin: '20px auto 0 auto'}} src={img} alt=\"error\" />\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n\tconst {request, clearError, process, setProcess} = useHttp(); // вытаскиваем сущности хука в отдельные переменные\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=21aa5af94424603715dc10109257132d'; \r\n\tconst _baseOffset = 100;\r\n\tconst _issueNumber = 1;\r\n\tconst _comicsLimit = 8;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter); // можно не писать item => this._transformCharacter(item), приходящий аргумент итак попадет в коллбэк\r\n\t}\r\n\t\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?limit=9&offset=210&${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t}\r\n\r\n\tconst findCharacter = async (name) => {\r\n\r\n\t\tlet res;\r\n\t\tlet data;\r\n\t\ttry {\r\n\t\t\tres = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\t\tif (res.data.results.length === 0) throw new Error(`There is no \"${name}\" in database`)\r\n\t\t\tdata = _transformCharacter(res.data.results[0]) \r\n\t\t} catch(e) {\r\n\t\t\tsetProcess('error');\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tconst getAllComics = async(offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}comics?issueNumber=${_issueNumber}&orderBy=focDate&limit=${_comicsLimit}&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async(id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\tname: comics.title,\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tprice: comics.prices[0].price,\r\n\t\t\turl: comics.urls[0].url,\r\n\t\t\tdescription: comics.description,\r\n\t\t\tpageCount: comics.pageCount,\r\n\t\t\tlanguage: comics.textObjects[0] ? comics.textObjects[0].language : null,\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\tlet descr = char.description;\r\n\t\tif (!descr) {\r\n\t\t\tdescr = \"Ooops..there's no info about this character\"\r\n\t\t} else if (descr.length > 210) {\r\n\t\t\tdescr = `${descr.slice(0, 207)}...`;\r\n\t\t}\r\n\t\t\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: descr,\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tid: char.id,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t}\t\t\r\n\t}\r\n\r\n\treturn {\r\n\t\t\t\t\tgetAllCharacters, \r\n\t\t\t\t\tgetCharacter, \r\n\t\t\t\t\tclearError, \r\n\t\t\t\t\tgetAllComics, \r\n\t\t\t\t\tgetComic, \r\n\t\t\t\t\tfindCharacter,  \r\n\t\t\t\t\tprocess,\r\n\t\t\t\t\tsetProcess} // возвращаем сущности (состояния загрузки и эррора, пройдя через сервис, передадутся после вызова сервиса в компонент)\r\n}\r\n\r\nexport default useMarvelService;","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n\tconst [process, setProcess] = useState('waiting');\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type': 'application/json'}) => {\r\n\t\t\r\n\t\tsetProcess('loading');\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, body, headers}); // передаем в фетч аргументы из коллбэка для настройки запроса\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t} catch(e) {\r\n\t\t\tsetProcess('error');\r\n\t\t\tthrow e; // пробрасываем ошибку дальше\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// нужна функция, для того, чтобы затереть стейт с ошибкой\r\n\tconst clearError = useCallback(() => {\r\n\t\tsetProcess('loading');\r\n\t}, []);\r\n\r\n\treturn {request, clearError, process, setProcess}; // возвращаем из хука сущности\r\n}","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Spinner from '../components/spinner/Spinner';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n\tswitch (process) {\r\n\t\tcase 'waiting': \r\n\t\t\treturn <Skeleton/>;\r\n\t\tcase 'loading': \r\n\t\t\treturn <Spinner/>;\r\n\t\tcase 'confirmed': \r\n\t\t\treturn <Component data={data}/>;\r\n\t\tcase 'error': \r\n\t\t\treturn <ErrorMessage/>;\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Unexpected process state');\r\n\t}\r\n}\r\n\r\nexport default setContent;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}