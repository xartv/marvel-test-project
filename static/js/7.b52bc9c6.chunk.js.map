{"version":3,"sources":["components/pages/SinglePage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["ComicContent","comic","name","description","thumbnail","price","pageCount","language","className","content","src","alt","to","CharContent","char","SinglePage","props","id","useParams","useState","single","setSingle","useMarvelService","getComic","getCharacter","useEffect","onRequest","onComicLoaded","onCharLoaded","then","comicContent","charContent","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","a","offset","res","results","map","_transformCharacter","findCharacter","length","getAllComics","_transformComics","comics","title","path","extension","prices","urls","textObjects","descr","slice","homepage","wiki","items","AppBanner","avengers","avengersLogo"],"mappings":"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","file":"static/js/7.b52bc9c6.chunk.js","sourcesContent":["import { Link, useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\nimport './singlePage.scss';\r\n\r\nconst SinglePage = (props) => {\r\n\tconst { id } = useParams();\r\n\tconst [single, setSingle] = useState('');\r\n\tconst { getComic, getCharacter } = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tonRequest(id);\r\n\t\t// eslint-disable-next-line\r\n\t}, [id])\r\n\r\n\tconst onComicLoaded = (comic) => {\r\n\t\tsetSingle(comic);\r\n\t}\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetSingle(char);\r\n\t}\r\n\r\n\tconst onRequest = (id) => {\r\n\t\tif (props.comic) {\r\n\t\t\tgetComic(id)\r\n\t\t\t\t.then(onComicLoaded)\r\n\t\t}\r\n\t\tif (props.char) {\r\n\t\t\tgetCharacter(id)\r\n\t\t\t\t.then(onCharLoaded)\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst comicContent = props.comic ? <ComicContent comic={single}/> : null;\r\n\tconst charContent = props.char ? <CharContent char={single}/> : null;\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AppBanner/>\r\n\t\t\t{comicContent}\r\n\t\t\t{charContent}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst ComicContent = ({comic}) => {\r\n\tconst {name, description, thumbnail, price, pageCount, language} = comic;\r\n\treturn (\r\n\t\t<div className=\"single\">\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tcontent={`${name} comics book`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<title>{name}</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<img src={thumbnail} alt={name} className=\"single__img\"/>\r\n\t\t\t<div className=\"single__info\">\r\n\t\t\t\t<h2 className=\"single__name\">{name}</h2>\r\n\t\t\t\t<p className=\"single__descr\">{description}</p>\r\n\t\t\t\t<p className=\"single__descr\">{pageCount} pages</p>\r\n\t\t\t\t<p className=\"single__descr\">language: {language}</p>\r\n\t\t\t\t<div className=\"single__price\">{price} $</div>\r\n\t\t\t</div>\r\n\t\t\t<Link to=\"../comics\" className=\"single__back\">Back to all</Link>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst CharContent = ({char}) => {\r\n\tconst {name, description, thumbnail} = char;\r\n\treturn (\r\n\t\t<div className=\"single\">\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tcontent={`${name} single page`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<title>{name}</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<img src={thumbnail} alt={name} className=\"single__img\"/>\r\n\t\t\t<div className=\"single__info\">\r\n\t\t\t\t<h2 className=\"single__name\">{name}</h2>\r\n\t\t\t\t<p className=\"single__descr\">{description}</p>\r\n\t\t\t</div>\r\n\t\t\t<Link to=\"/\" className=\"single__back\">Back main page</Link>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SinglePage;","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n\tconst {loading, request, error, clearError, setError} = useHttp(); // вытаскиваем сущности хука в отдельные переменные\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=21aa5af94424603715dc10109257132d'; \r\n\tconst _baseOffset = 100;\r\n\tconst _issueNumber = 1;\r\n\tconst _comicsLimit = 8;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter); // можно не писать item => this._transformCharacter(item), приходящий аргумент итак попадет в коллбэк\r\n\t}\r\n\t\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?limit=9&offset=210&${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t}\r\n\r\n\tconst findCharacter = async (name) => {\r\n\r\n\t\tlet res;\r\n\t\tlet data;\r\n\t\ttry {\r\n\t\t\tres = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\t\tif (res.data.results.length === 0) throw new Error(`There is no \"${name}\" in database`)\r\n\t\t\tdata = _transformCharacter(res.data.results[0]) \r\n\t\t} catch(e) {\r\n\t\t\tsetError(e.message)\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tconst getAllComics = async(offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}comics?issueNumber=${_issueNumber}&orderBy=focDate&limit=${_comicsLimit}&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async(id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\tname: comics.title,\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tprice: comics.prices[0].price,\r\n\t\t\turl: comics.urls[0].url,\r\n\t\t\tdescription: comics.description,\r\n\t\t\tpageCount: comics.pageCount,\r\n\t\t\tlanguage: comics.textObjects[0] ? comics.textObjects[0].language : null,\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\tlet descr = char.description;\r\n\t\tif (!descr) {\r\n\t\t\tdescr = \"Ooops..there's no info about this character\"\r\n\t\t} else if (descr.length > 210) {\r\n\t\t\tdescr = `${descr.slice(0, 207)}...`;\r\n\t\t}\r\n\t\t\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: descr,\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tid: char.id,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t}\t\t\r\n\t}\r\n\r\n\treturn {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic, findCharacter, setError} // возвращаем сущности (состояния загрузки и эррора, пройдя через сервис, передадутся после вызова сервиса в компонент)\r\n}\r\n\r\nexport default useMarvelService;","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type': 'application/json'}) => {\r\n\t\t\r\n\t\tsetLoading(true); // ставим загрузку в активный стэйт\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, body, headers}); // передаем в фетч аргументы из коллбэка для настройки запроса\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tsetLoading(false); // завершаем загрузку\r\n\t\t\treturn data;\r\n\r\n\t\t} catch(e) {\r\n\t\t\tsetLoading(false); // даже если ошибка, то завершаем загрузку\r\n\t\t\tsetError(e.message); // передаем в стэйт ошибки сообщение об ошибке\r\n\t\t\tthrow e; // пробрасываем ошибку дальше\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// нужна функция, для того, чтобы затереть стейт с ошибкой\r\n\tconst clearError = useCallback(() => setError(null), []);\r\n\r\n\treturn {loading, request, error, clearError, setError}; // возвращаем из хука сущности\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}