{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["setContent","process","elements","newListLoading","Spinner","className","ErrorMessage","Error","ComicsList","useState","comicsList","setComicsList","offset","setOffset","setNewListLoading","endList","setEndList","useMarvelService","clearError","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","length","map","comics","id","name","thumbnail","price","imgStyle","to","style","src","alt","disabled","onClick","display","ComicsPage","Helmet","content","AppBanner","width","margin","img","request","useCallback","url","method","body","headers","fetch","response","ok","status","json","data","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","a","res","results","_transformCharacter","getCharacter","findCharacter","_transformComics","getComic","title","path","extension","prices","urls","description","pageCount","language","textObjects","char","descr","slice","homepage","wiki","items","avengers","avengersLogo"],"mappings":"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","file":"static/js/7.8518fdf3.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './comicsList.scss';\r\n\r\nconst setContent = (process, elements, newListLoading) => {\r\n\tswitch (process) {\r\n\t\tcase 'waiting': \r\n\t\t\treturn <Spinner/>;\r\n\t\tcase 'loading': \r\n\t\t\treturn newListLoading ? \r\n\t\t\t\t\t\t\t<ul className=\"comics__grid\">\r\n\t\t\t\t\t\t\t\t{elements}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t : <Spinner/>;\r\n\t\tcase 'confirmed': \r\n\t\t\treturn <ul className=\"comics__grid\">\r\n\t\t\t\t\t\t\t\t{elements}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\tcase 'error': \r\n\t\t\treturn <ErrorMessage/>;\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Unexpected process state');\r\n\t}\r\n}\r\n\r\nconst ComicsList = () => {\r\n\r\n\tconst [comicsList, setComicsList] = useState([]);\r\n\tconst [offset, setOffset] = useState(100);\r\n\tconst [newListLoading, setNewListLoading] = useState(false);\r\n\tconst [endList, setEndList] = useState(false);\r\n\tconst {clearError, getAllComics, process, setProcess} = useMarvelService();\r\n\r\n\tuseEffect(() => {\r\n\t\tonRequest(offset, true)\r\n\t\t// eslint-disable-next-line\r\n\t}, [])\r\n\r\n\tconst onRequest = (offset, initial) => {\r\n\t\tclearError();\r\n\t\tinitial ? setNewListLoading(false) : setNewListLoading(true); // если initial true, то это означает, что у нас первичная загрузка\r\n\t\tgetAllComics(offset)\r\n\t\t\t.then(onComicsListLoaded)\r\n\t\t\t.then(() => setProcess('confirmed'));\r\n\t}\r\n\r\n\tconst onComicsListLoaded = (newComicsList) => {\r\n\t\tif (newComicsList.length < 8) {\r\n\t\t\tsetEndList(true);\r\n\t\t}\r\n\r\n\t\tsetComicsList([...comicsList, ...newComicsList]);\r\n\t\tsetNewListLoading(false);\r\n\t\tsetOffset(offset => offset + 8);\r\n\t}\r\n\t\r\n\tconst elements = comicsList.map((comics) => {\r\n\t\tconst {id, name, thumbnail} = comics;\r\n\t\tlet {price} = comics;\r\n\t\tconst imgStyle = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? {'objectFit': 'contain'} : null;\r\n\t\tprice = price === 0 ? 'Not available' : `${price}$`;\r\n\r\n\t\treturn (\r\n\t\t\t<li key={id} className=\"comics__item\">\r\n\t\t\t\t<Link to={`/comics/${id}`}>\r\n\t\t\t\t\t\t<img style={imgStyle} src={thumbnail} alt=\"ultimate war\" className=\"comics__item-img\"/>\r\n\t\t\t\t\t\t<div className=\"comics__item-name\">{name}</div>\r\n\t\t\t\t\t\t<div className=\"comics__item-price\">{price}</div>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t\t<div className=\"comics__list\">\r\n\t\t\t\t{setContent(process, elements, newListLoading)}\r\n\t\t\t\t<button \r\n\t\t\t\t\tdisabled={newListLoading ? true : false}\r\n\t\t\t\t\tclassName=\"button button__main button__long\"\r\n\t\t\t\t\tonClick={() => onRequest(offset)}\r\n\t\t\t\t\tstyle={{display: endList ? 'none' : 'block'}}>\r\n\t\t\t\t\t\t<div className=\"inner\">load more</div>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ComicsList;","import Helmet from 'react-helmet';\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>Comics page</title>\r\n\t\t\t\t<meta\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tcontent=\"Page with list of comics\"\r\n\t\t\t\t\t/>\r\n\t\t\t</Helmet>\r\n\t\t\t<AppBanner/>\r\n\t\t\t<ComicsList/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/error.2e68414c.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n\treturn(\r\n\t\t<img style={{width: 200, display: 'block', margin: '20px auto 0 auto'}} src={img} alt=\"error\" />\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n\tconst {request, clearError, process, setProcess} = useHttp(); // вытаскиваем сущности хука в отдельные переменные\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=21aa5af94424603715dc10109257132d'; \r\n\tconst _baseOffset = 100;\r\n\tconst _issueNumber = 1;\r\n\tconst _comicsLimit = 8;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter); // можно не писать item => this._transformCharacter(item), приходящий аргумент итак попадет в коллбэк\r\n\t}\r\n\t\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?limit=9&offset=210&${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t}\r\n\r\n\tconst findCharacter = async (name) => {\r\n\r\n\t\tlet res;\r\n\t\tlet data;\r\n\t\ttry {\r\n\t\t\tres = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\t\tif (res.data.results.length === 0) throw new Error(`There is no \"${name}\" in database`)\r\n\t\t\tdata = _transformCharacter(res.data.results[0]) \r\n\t\t} catch(e) {\r\n\t\t\tsetProcess('error');\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tconst getAllComics = async(offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}comics?issueNumber=${_issueNumber}&orderBy=focDate&limit=${_comicsLimit}&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async(id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\tname: comics.title,\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tprice: comics.prices[0].price,\r\n\t\t\turl: comics.urls[0].url,\r\n\t\t\tdescription: comics.description,\r\n\t\t\tpageCount: comics.pageCount,\r\n\t\t\tlanguage: comics.textObjects[0] ? comics.textObjects[0].language : null,\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\tlet descr = char.description;\r\n\t\tif (!descr) {\r\n\t\t\tdescr = \"Ooops..there's no info about this character\"\r\n\t\t} else if (descr.length > 210) {\r\n\t\t\tdescr = `${descr.slice(0, 207)}...`;\r\n\t\t}\r\n\t\t\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: descr,\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tid: char.id,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t}\t\t\r\n\t}\r\n\r\n\treturn {\r\n\t\t\t\t\tgetAllCharacters, \r\n\t\t\t\t\tgetCharacter, \r\n\t\t\t\t\tclearError, \r\n\t\t\t\t\tgetAllComics, \r\n\t\t\t\t\tgetComic, \r\n\t\t\t\t\tfindCharacter,  \r\n\t\t\t\t\tprocess,\r\n\t\t\t\t\tsetProcess} // возвращаем сущности (состояния загрузки и эррора, пройдя через сервис, передадутся после вызова сервиса в компонент)\r\n}\r\n\r\nexport default useMarvelService;","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n\tconst [process, setProcess] = useState('waiting');\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type': 'application/json'}) => {\r\n\t\t\r\n\t\tsetProcess('loading');\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, body, headers}); // передаем в фетч аргументы из коллбэка для настройки запроса\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t} catch(e) {\r\n\t\t\tsetProcess('error');\r\n\t\t\tthrow e; // пробрасываем ошибку дальше\r\n\t\t}\r\n\t}, []);\r\n\r\n\t// нужна функция, для того, чтобы затереть стейт с ошибкой\r\n\tconst clearError = useCallback(() => {\r\n\t\tsetProcess('loading');\r\n\t}, []);\r\n\r\n\treturn {request, clearError, process, setProcess}; // возвращаем из хука сущности\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}